//Boss Animation Libary

let Anim_Attack = 0;
let Anim_Declare = 0;
let IsBossExisting = false;

SetCommonData("BossAnimationAlpha",255);

function SetBossAnimationAlpha(alpha) {
	SetCommonData("BossAnimationAlpha",alpha);
}

function SetBossAnimationVisible(obj,visible) {
	Obj_SetValue(obj,"AnimationVisible",visible);
}

task ManageBossAnimation {
	let objEnemy = ID_INVALID;
	let id = "";
	loop {
		if(!IsBossExisting) {
			while(length(GetEnemyBossObjectID)==0) { yield; }
			if(length(GetEnemyBossObjectID)>0) { objEnemy = GetEnemyBossObjectID[0]; }
			id = Obj_GetValueD(objEnemy,"Animation","");
			
			alternative(id)
			case("M1") { AnimateBossM1(ID_INVALID); }
			case("M2") { AnimateBossM2(ID_INVALID); }
			case("M3") { AnimateBossM3(ID_INVALID); }
			case("M4") { AnimateBossM4(ID_INVALID); }
			case("M5") { AnimateBossM5(ID_INVALID); }
			//case("M6_A") { AnimateBossM6A(ID_INVALID); }
			//case("M6_B") { AnimateBossM6B(ID_INVALID); }
			//case("M6_C") { AnimateBossM6C(ID_INVALID); }
			case("M7_A") { AnimateBossM7A(ID_INVALID); }
			case("M7_B") { AnimateBossM7B(ID_INVALID); }
			case("E1") { AnimateBossE1(ID_INVALID); }
			case("E2") { AnimateBossE2(ID_INVALID); }
			case("E3") { AnimateBossE3(ID_INVALID); }
			case("E4") { AnimateBossE4(ID_INVALID); }
			case("E5") { AnimateBossE5(ID_INVALID); }
			case("E6") { AnimateBossE6(ID_INVALID); }
			case("E6_A") { AnimateBossE6A(ID_INVALID); }
			case("E7_A") { AnimateBossE7A(ID_INVALID); }
			case("E7_B") { AnimateBossE7B(ID_INVALID); }

			IsBossExisting = true;
		}
		if(GetEnemyBossSceneObjectID == ID_INVALID) { IsBossExisting = false; }
		yield;
	}
}

task SpellDeclare(obj,frames) {
	let objEnemy = GetEnemyBossObjectID[0];
	//loop(4) { yield; }
	// while(ObjMove_GetSpeed(objEnemyMain)*cos(ObjMove_GetAngle(objEnemyMain)) < 0.5 && ObjMove_GetSpeed(objEnemyMain)*cos(ObjMove_GetAngle(objEnemyMain)) > -0.5){ yield; }
	//while(ObjMove_GetSpeed(objEnemy)*cos(ObjMove_GetAngle(objEnemy)) >= 0.5 || ObjMove_GetSpeed(objEnemy)*cos(ObjMove_GetAngle(objEnemy)) <= -0.5){ yield; }
	loop(45) { yield; }
	//loop(15) { yield; } // Changed from 22 to 15
	Obj_SetValue(obj,"Anim_Declare",1);
	loop(8) { yield; }
	ObjEnemyBossScene_StartSpell(GetEnemyBossSceneObjectID);
	loop(frames) { yield; }
	Obj_SetValue(obj,"Anim_Declare",0);
}
task SpellDeclareEx(obj,frames) {
	let objEnemy = GetEnemyBossObjectID[0];
	//loop(4) { yield; }
	// while(ObjMove_GetSpeed(objEnemyMain)*cos(ObjMove_GetAngle(objEnemyMain)) < 0.5 && ObjMove_GetSpeed(objEnemyMain)*cos(ObjMove_GetAngle(objEnemyMain)) > -0.5){ yield; }
	//while(ObjMove_GetSpeed(objEnemy)*cos(ObjMove_GetAngle(objEnemy)) >= 0.5 || ObjMove_GetSpeed(objEnemy)*cos(ObjMove_GetAngle(objEnemy)) <= -0.5){ yield; }
	//loop(15) { yield; } // Changed from 22 to 15
	//Anim_Declare = 1;
	Obj_SetValue(obj,"Anim_Declare",1);
	loop(8) { yield; }
	ObjEnemyBossScene_StartSpell(GetEnemyBossSceneObjectID);
	loop(frames) { yield; }
	//Anim_Declare = 0;
	Obj_SetValue(obj,"Anim_Declare",0);
}

task AnimateBossM1(objID) {
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }

	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 1/FutoBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM2(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 2/MinorikoBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48+float);
			float+=0.15*cos(3*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		// ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM3(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 8;
	let move = 2;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 3/AyaBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		//if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) == 0) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*4, y*1, x*5, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*4, y*1, x*5, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*5-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM4(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 4/CirnoBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM5(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 5/YamameBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM6A(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 6/LunasaBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(Obj_GetValueD(objID,"DeleteSprite",false)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			Obj_SetVisible(objSprite,true);
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48+float);
			float+=0.15*cos(3*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		// ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM6B(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 6/LyricaBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(Obj_GetValueD(objID,"DeleteSprite",false)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			Obj_SetVisible(objSprite,true);
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48+float);
			float+=0.15*cos(3*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			//if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			//if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			//if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			//if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			//if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			//if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			//if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		// ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM6C(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 6/MerlinBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(Obj_GetValueD(objID,"DeleteSprite",false)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			Obj_SetVisible(objSprite,true);
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			ObjSprite2D_SetDestRect(objSprite,-48,-48+float,48,48+float);
			float+=0.15*cos(3*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		// ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM7A(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 12;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage EX/PatchyBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossM7B(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage EX/RinnoBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE1(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 1/TojikoBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*6){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*7){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE2(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 2/ShizuhaBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*6){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*7){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r*8){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE3(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 5;
	let attack_init = attack;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 3/MomijiBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Slow",0) == 1) { attack = 10*attack_init; } else { attack = attack_init; }
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			//ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*4, y*4, x*5, y*5); }
			if(count >= r*5-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			//ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*4, y*4, x*5, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*5-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*4, y*4, x*5, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE4(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 5;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 4/DaiBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE4_W(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 5;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;
	
	ObjPrim_SetTexture(objID, MD ~ "IMG/Enemy/Stage 4/DaiBoss_White.png");
	
	while(!Obj_IsDeleted(objID)){
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 8){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objID, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objID, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objID, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objID, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objID);
		yield;
	}
}
task AnimateBossE5(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 10;
	let move = 3;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 5/KisumeBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE6(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 6/LilyBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE6_W(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;
	
	ObjPrim_SetTexture(objID, MD ~ "IMG/Enemy/Stage 6/LilyBoss_White.png");
	
	while(!Obj_IsDeleted(objID)){
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objID, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objID, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objID, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objID, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objID, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objID, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objID, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objID, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objID, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objID, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objID);
		yield;
	}
}
task AnimateBossE6A(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage 6/LilyBoss_Black.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE7A(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage EX/KoaBoss.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Attack",0) == 0 && Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Attack",0) == 1){
			r = attack;
			if(type != 7 && type != 9){
				count = 0;
				type = 7;
			}
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Idle to attack
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*4-r/2){ type=9; count=0; }
		}
		if(type==8){ //Attack to idle
			r = attack;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*4, x*3, y*5); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==9){ //Attack
			r = attack;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
			if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}
task AnimateBossE7B(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage EX/KoaBoss2.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		Obj_SetRenderPriorityI(objSprite,40);
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			//if(Obj_GetValueD(objID,"Anim_Hurt1",0)==0 && Obj_GetValueD(objID,"Anim_Hurt1",0)==0) { type = 0; }
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 1){
			r = attack;
			type = 7;
			Obj_SetRenderPriorityI(objSprite,39);
		}
		if(Obj_GetValueD(objID,"Anim_Hurt2",0) == 1){
			r = attack;
			type = 8;
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Hurt1
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5);
			if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 0 && Obj_GetValueD(objID,"Anim_Hurt2",0) == 0) { type=0; count=0; }
		}
		if(type==8){ //Hurt2
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5);
			if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 0 && Obj_GetValueD(objID,"Anim_Hurt2",0) == 0) { type=0; count=0; }
		}
		//if(type==9){ //Attack
		//	r = attack;
		//	if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
		//	if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		//}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}

task AnimateBossE7B_W(objID){
	let count = 0;
	let type = 0;
	
	let x = 96;
	let y = 96;
	
	let idle = 7;
	let move = 4;
	let attack = 6;
	let declare = 6;
	
	let r = idle;
	let m = 0;
	
	let float = 0;
	let t = 0;

	let id = objID;
	let enemy = false;
	if(id != ID_INVALID) { enemy = true; }
	
	let objSprite = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(objSprite,40);
	ObjPrim_SetTexture(objSprite, MD ~ "IMG/Enemy/Stage EX/KoaBoss2_White.png");
	
	while(!Obj_IsDeleted(GetEnemyBossSceneObjectID)){
		if(enemy && Obj_IsDeleted(id)) { break; }
		if(!enemy && length(GetEnemyBossObjectID)>0) { objID = GetEnemyBossObjectID[0]; }
		if(ObjRender_GetX(objID)!=0) {
			ObjRender_SetPosition(objSprite,ObjRender_GetX(objID),ObjRender_GetY(objID),0);
		}
		if(!Obj_GetValueD(objID,"AnimationVisible",true)) {
			Obj_SetVisible(objSprite,false);
		}
		else { Obj_SetVisible(objSprite,true); }
		if(ObjMove_GetSpeed(objID)<0.01 && ObjRender_GetScaleX(objID) != 0) {
			ObjRender_SetScaleX(objSprite,ObjRender_GetScaleX(objID));
			ObjRender_SetScaleY(objSprite,ObjRender_GetScaleY(objID));
			ObjRender_SetScaleZ(objSprite,ObjRender_GetScaleZ(objID));
		}
		if(Obj_GetValueD(objID,"Anim_Declare",0) == 0){
			//if(Obj_GetValueD(objID,"Anim_Hurt1",0)==0 && Obj_GetValueD(objID,"Anim_Hurt1",0)==0) { type = 0; }
			if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.2 || ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.2){
				if(type == 0) {
					count = 0;
					type = 2;
				}
				// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32);
			}
			else {
				if(type == 2) {
					count = 0;
					type = 3;
				}
			// ObjSprite2D_SetDestRect(objID,-32,-32+float,32,32+float);
			float+=0.1*cos(2*t);
			t++;
			}
		}
		else if(Obj_GetValueD(objID,"Anim_Declare",0) == 1){
			r = declare;
			if(type != 4 && type != 6){
				count = 0;
				type = 4;
			}
		}
		if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 1){
			r = attack;
			type = 7;
		}
		if(Obj_GetValueD(objID,"Anim_Hurt2",0) == 1){
			r = attack;
			type = 8;
		}
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) >= 0.1) { ObjRender_SetScaleXYZ(objSprite, -1, 1, 1); }
		if(ObjMove_GetSpeed(objID)*cos(ObjMove_GetAngle(objID)) <= -0.1){ ObjRender_SetScaleXYZ(objSprite, 1, 1, 1); }
		
		if(type==0){ //Idle
			r = idle;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*0, x*1, y*1); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*0, x*4, y*1); }
			if(count >= r*4){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*0, x*3, y*1); }
			if(count >= r*5){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*0, x*2, y*1); }
			if(count >= r*6){ count = 0; }
		}
		if(type==1){ //Moving
			r = move;
			// if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y+96, x*1, y+192); }
			// if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y+96, x*2, y+192); }
			// if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y+96, x*3, y+192); }
			// if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y+96, x*4, y+192); }
			// if(count >= r*4){ count = 0; }
		}
		if(type==2){ //Idle to moving
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			//if(count >= r*3-r/2){ type=1; count=0; }
		}
		if(type==3){ //Moving to idle
			r = move;
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*1, x*4, y*2); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*1, x*3, y*2); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*1, x*2, y*2); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*1, x*1, y*2); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==4){ //Idle to declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*4-r/2){ type=6; count=0; }
		}
		if(type==5){ //Declare to idle
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*2, x*4, y*3); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*2, x*3, y*3); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*2, x*2, y*3); }
			if(count >= r*3){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*2, x*1, y*3); }
			if(count >= r*4-r/2){ type=0; count=0; }
		}
		if(type==6){ //Declare
			r = declare;
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*0, y*3, x*1, y*4); }
			if(count >= r*1){ ObjSprite2D_SetSourceRect(objSprite, x*1, y*3, x*2, y*4); }
			if(count >= r*2){ ObjSprite2D_SetSourceRect(objSprite, x*2, y*3, x*3, y*4); }
			if(count >= r*3){ count = 0; }
			if(Obj_GetValueD(objID,"Anim_Declare",0) == 0) { type=5; count=0; }
		}
		if(type==7){ //Hurt1
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			ObjSprite2D_SetSourceRect(objSprite, x*0, y*4, x*1, y*5);
			if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 0 && Obj_GetValueD(objID,"Anim_Hurt2",0) == 0) { type=0; count=0; }
		}
		if(type==8){ //Hurt2
			ObjRender_SetScaleXYZ(objSprite, 1, 1, 1);
			ObjSprite2D_SetSourceRect(objSprite, x*1, y*4, x*2, y*5);
			if(Obj_GetValueD(objID,"Anim_Hurt1",0) == 0 && Obj_GetValueD(objID,"Anim_Hurt2",0) == 0) { type=0; count=0; }
		}
		//if(type==9){ //Attack
		//	r = attack;
		//	if(count >= 0){ ObjSprite2D_SetSourceRect(objSprite, x*3, y*4, x*4, y*5); }
		//	if(Obj_GetValueD(objID,"Anim_Attack",0) == 0) { type=8; count=0; }
		//}
		m+=1;
		count++;
		ObjSprite2D_SetDestCenter(objSprite);
		if(!enemy) { ObjRender_SetAlpha(objSprite,GetCommonData("BossAnimationAlpha",255)); }
		yield;
	}
	Obj_Delete(objSprite);
}

task AnimateBossT1(objID){
	let count = 0;
	let enemyang = 0;
	let enemyspd = 0;
	ObjPrim_SetTexture(objID, MD ~ "SCRIPT/Test/Tokiko/Tokiko5.png");
	ObjSprite2D_SetSourceRect(objID, 0, 0, 96, 96);
	ObjSprite2D_SetDestCenter(objID);  
	ObjRender_SetScaleXYZ(objID, 1, 1, 1);
	while(!Obj_IsDeleted(objID)){
		enemyang = absolute(ObjMove_GetAngle(objID));
		enemyspd = absolute(ObjMove_GetSpeed(objID));
		while(enemyang>360){
			enemyang = enemyang-360;
		}
		if(enemyspd > 0.25){
			if(enemyang<90 || enemyang>270){ ObjRender_SetAngleZ(objID, count*15.765); }
			else if(enemyang< 270 && enemyang > 90){ ObjRender_SetAngleZ(objID, -count*15.765); }
			else{ }
		}
		else{ ObjRender_SetAngleZ(objID, 0); }
		count++;
		yield;
	}
}

task AnimateBossR1(objID){
	let count = 0;
	let enemyang = 0;
	let enemyspd = 0;
	ObjPrim_SetTexture(objID, MD ~ "SCRIPT/Test/Rin/Rin1.png");
	ObjSprite2D_SetSourceRect(objID, 0, 0, 96, 96);
	ObjSprite2D_SetDestCenter(objID);  
	ObjRender_SetScaleXYZ(objID, 1, 1, 1);
	while(!Obj_IsDeleted(objID)){
		enemyang = absolute(ObjMove_GetAngle(objID));
		enemyspd = absolute(ObjMove_GetSpeed(objID));
		while(enemyang>360){
			enemyang = enemyang-360;
		}
		if(enemyspd > 0.25){
			if(enemyang<90 || enemyang>270){ ObjRender_SetAngleZ(objID, count*15.765); }
			else if(enemyang< 270 && enemyang > 90){ ObjRender_SetAngleZ(objID, -count*15.765); }
			else{ }
		}
		else{ ObjRender_SetAngleZ(objID, 0); }
		count++;
		yield;
	}
}

task AnimateBossMima(objID){
	let count = 0;
	let enemyang = 0;
	let enemyspd = 0;
	ObjPrim_SetTexture(objID, MD ~ "SCRIPT/Test/Mima/Mima.png");
	ObjSprite2D_SetSourceRect(objID, 0, 0, 142, 112);
	ObjSprite2D_SetDestCenter(objID);  
	ObjRender_SetScaleXYZ(objID, 1/1.47, 1/1.47, 1);
	while(!Obj_IsDeleted(objID)){
		enemyang = absolute(ObjMove_GetAngle(objID));
		enemyspd = absolute(ObjMove_GetSpeed(objID));
		while(enemyang>360){
			enemyang = enemyang-360;
		}
		if(enemyspd > 0.25){
			if(enemyang<90 || enemyang>270){ ObjRender_SetAngleZ(objID, count*15.765); }
			else if(enemyang< 270 && enemyang > 90){ ObjRender_SetAngleZ(objID, -count*15.765); }
			else{ }
		}
		else{ ObjRender_SetAngleZ(objID, 0); }
		count++;
		yield;
	}
}