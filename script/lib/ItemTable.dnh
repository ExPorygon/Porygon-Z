				 //POW,POI,B,LP,SP,1UP,SPL
let EnemyItemList =[[1, 0, 0, 0, 0, 0, 0], //Stage 1
					[0, 1, 0, 0, 0, 0, 0],
					[0, 0, 1, 0, 0, 0, 0],
					[1, 0, 0, 0, 0, 0, 0], 
					[0, 5, 4, 0, 0, 0, 0], 
					[6, 6, 0, 0, 1, 0, 0], 
					[5, 0, 8, 1, 0, 0, 0], 
					[6, 6, 6, 1, 0, 0, 0], 
					[1, 0, 0, 0, 0, 0, 0], //Stage 2
					[1, 0, 0, 0, 0, 0, 0], 
					[0, 0, 2, 0, 0, 0, 0], 
					[0, 9, 8, 0, 0, 0, 0], 
					[0, 9, 8, 0, 0, 0, 0], 
					[2, 16, 8, 0, 1, 0, 0], 
					[0, 14, 7, 0, 0, 0, 0], 
					[2, 14, 7, 0, 1, 0, 0], 
					[2, 0, 1, 0, 0, 0, 0], //Stage 3
					[2, 0, 1, 0, 0, 0, 0], 
					[2, 0, 0, 0, 0, 0, 0], 
					[0, 18, 0, 0, 0, 0, 0], 
					[0, 18, 0, 0, 1, 0, 0], 
					[0, 15, 18, 0, 0, 0, 0], 
					[0, 20, 15, 1, 0, 0, 0], 
					[15, 10, 10, 1, 0, 0, 0], 
					[0, 20, 0, 1, 0, 0, 0], 
					[0, 20, 13, 0, 1, 0, 0], 
					[0, 3, 0, 0, 0, 0, 0], //Stage 4
					[0, 0, 3, 0, 0, 0, 0], 
					[3, 0, 0, 0, 0, 0, 0], 
					[0, 3, 0, 0, 0, 0, 0], 
					[0, 0, 3, 0, 0, 0, 0], 
					[4, 0, 0, 0, 0, 0, 0], 
					[0, 5, 2, 0, 0, 0, 0], 
					[0, 6, 3, 0, 0, 0, 0], 
					[2, 0, 0, 0, 0, 0, 0], 
					[8, 16, 8, 0, 1, 0, 0], 
					[8, 16, 8, 0, 1, 0, 0], 
					[8, 16, 8, 0, 1, 0, 0], 
					[0, 20, 13, 1, 0, 0, 0], 
					[0, 30, 12, 1, 0, 0, 0],
					[2, 0, 2, 0, 0, 0, 0], 
					[10, 14, 14, 1, 0, 0, 0], 
					[0, 5, 5, 1, 0, 0, 0], //Stage 5
					[10, 10, 9, 0, 1, 0, 0], 
					[0, 0, 0, 0, 0, 0, 0], 
					[0, 8, 3, 0, 0, 0, 0], 
					[12, 0, 0, 0, 0, 0, 0], 
					[0, 4, 5, 0, 0, 0, 0],
					[4, 0, 0, 0, 0, 0, 0], //Stage 6
					[0, 4, 0, 0, 0, 0, 0],
					[0, 0, 3, 0, 0, 0, 0],
					[0, 20, 20, 1, 0, 0, 0],
					[50, 50, 0, 0, 0, 0, 1],
					[1, 0, 0, 0, 0, 0, 0], //Stage EX
					[0, 2, 0, 0, 0, 0, 0],
					[2, 0, 0, 0, 0, 0, 0],
					[2, 0, 0, 0, 0, 0, 0],
					[0, 1, 2, 0, 0, 0, 0],
					[0, 15, 0, 0, 1, 0, 0],
					[6, 0, 6, 0, 0, 0, 0],
					[20, 15, 15, 0, 1, 0, 0],
					[20, 15, 15, 0, 1, 0, 0],
					[10, 10, 5, 0, 1, 0, 0],
					[5, 10, 10, 0, 0, 0, 0],
					[20, 0, 10, 1, 0, 0, 0],
					[0, 15, 20, 1, 0, 0, 0],
					[20, 20, 20, 1, 0, 0, 0], 
					[20, 20, 20, 1, 0, 0, 0],
					[20, 20, 20, 1, 0, 0, 0],
					[0, 1, 1, 0, 0, 0, 0],
					[30, 30, 30, 0, 0, 0, 1]];

						//PIV,LP
let EnemyFlashItemList =[[1, 0], //Stage 1
						[1, 0],
						[1, 0],
						[1, 0], 
						[3, 0], 
						[6, 1], 
						[6, 1], 
						[6, 1], 
						[1, 0], //Stage 2
						[1, 0], 
						[2, 0], 
						[8, 0], 
						[8, 0], 
						[15, 1], 
						[15, 1], 
						[15, 1], 
						[3, 0], //Stage 3
						[3, 0], 
						[3, 0], 
						[12, 0], 
						[12, 1], 
						[12, 0], 
						[12, 0], 
						[10, 1], 
						[20, 1], 
						[20, 1], 
						[3, 0], //Stage 4
						[3, 0], 
						[3, 0], 
						[3, 0], 
						[3, 0], 
						[4, 0], 
						[4, 0], 
						[4, 0], 
						[2, 0], 
						[20, 1], 
						[20, 1], 
						[20, 1], 
						[25, 1], 
						[25, 1],
						[2, 0], 
						[25, 1], 
						[0, 0], //Stage 5
						[20, 1], 
						[0, 0], 
						[7, 0], 
						[7, 0], 
						[7, 0],
						[4, 0], //Stage 6
						[4, 0],
						[2, 0],
						[25, 1],
						[40, 1],
						[4, 0], //Stage EX
						[4, 0],
						[4, 0],
						[2, 0],
						[8, 0],
						[20, 1],
						[15, 0],
						[30, 1],
						[30, 1],
						[15, 0],
						[15, 0],
						[25, 1],
						[25, 1],
						[30, 1],
						[30, 1],
						[30, 1],
						[30, 0],
						[4, 0],
						[50, 1], //
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0],
						[0, 0]];

let FAIRY_SMALL_A1_1 = 0;
let FAIRY_SMALL_B1_B_1 = 1;
let FAIRY_SMALL_B1_A_1 = 2;
let FAIRY_SMALL_B2_1 = 3;
let FAIRY_MEDIUM_A1_1 = 4;
let FAIRY_LARGE_A1_1 = 5;
let FAIRY_LARGE_A2_1 = 6;
let FAIRY_LARGE_B1_1 = 7;

let FAIRY_SMALL_A1_2 = 8;
let FAIRY_SMALL_A2_2 = 9;
let FAIRY_SMALL_B1_2 = 10;
let FAIRY_MEDIUM_A1_2 = 11;
let FAIRY_MEDIUM_B1_2 = 12;
let FAIRY_LARGE_A1_2 = 13;
let FAIRY_LARGE_B1_2 = 14;
let FAIRY_LARGE_B2_2 = 15;

let FAIRY_SMALL_A1_3 = 16;
let FAIRY_SMALL_A2_3 = 17;
let FAIRY_SMALL_B1_3 = 18;
let FAIRY_MEDIUM_A1_3 = 19;
let FAIRY_MEDIUM_A2_3 = 20;
let FAIRY_MEDIUM_B1_3 = 21;
let FAIRY_MEDIUM_B2_3 = 22;
let FAIRY_LARGE_A1_3 = 23;
let YINYANG_A1_3 = 24;
let YINYANG_A2_3 = 25;

let FAIRY_SMALL_A1_B_4 = 26;
let FAIRY_SMALL_A1_A_4 = 27;
let FAIRY_SMALL_A2_4 = 28;
let FAIRY_SMALL_A3_B_4 = 29;
let FAIRY_SMALL_A3_A_4 = 30;
let FAIRY_SMALL_B1_4 = 31;
let FAIRY_SMALL_B2_4 = 32;
let FAIRY_SMALL_C1_4 = 33;
let FAIRY_SMALL_D1_4 = 34;
let FAIRY_MEDIUM_B1_4 = 35;
let FAIRY_MEDIUM_B2_4 = 36;
let FAIRY_MEDIUM_B3_4 = 37;
let FAIRY_LARGE_A1_4 = 38; // 4_FAIRY_LARGE_B1 is excluded. It exists as Spell_061-064
let FAIRY_LARGE_C1_4 = 39;
let FAIRY_LARGE_C1_F_4 = 40; // The familiar fairies for LARGE_C1 
let FAIRY_LARGE_D1_4 = 41;

let TRAP_A1_5 = 42;
let FAIRY_LARGE_A1_5 = 43;
let FAIRY_LARGE_B1_5 = 44;
let YINYANG_A1_5 = 45;
let YINYANG_B1_5 = 46;
let YINYANG_C1_5 = 47;

let FAIRY_SMALL_A1_R_6 = 48;
let FAIRY_SMALL_A1_B_6 = 49;
let FAIRY_SMALL_B1_6 = 50;
let FAIRY_LARGE_A1_6 = 51;
let FAIRY_LARGE_B1_6 = 52;

let FAIRY_SMALL_A1_R_7 = 53;
let FAIRY_SMALL_A1_B_7 = 54;
let FAIRY_SMALL_B1_7 = 55;
let FAIRY_SMALL_B2_7 = 56;
let FAIRY_SMALL_C1_7 = 57;
let FAIRY_MEDIUM_A1_7 = 58;
let FAIRY_MEDIUM_B1_7 = 59;
let FAIRY_LARGE_A1_7 = 60;
let FAIRY_LARGE_A2_7 = 61;
let YINYANG_A1_7 = 62;
let YINYANG_A2_7 = 63;
let BOOK_A1_7 = 64;
let BOOK_B1_7 = 65;
let BOOK_C1_7 = 66;
let BOOK_C2_7 = 67;
let BOOK_C3_7 = 68;
let BOOK_D1_7 = 69;
let BOOK_E1_7 = 70;


function GenerateEnemyItems01(ID,objEnemy,x,y) {
	let ItemArray = EnemyItemList[ID];
	let ItemArray2 = EnemyFlashItemList[ID];
	
	let total = 0;
	if(Obj_GetValueD(objEnemy,"PIV Enable",false)) {
		total = ItemArray[0]+ItemArray[1]+ItemArray[2]+ItemArray2[0];
	}
	else {
		total = ItemArray[0]+ItemArray[1]+ItemArray[2];
	}
	let disperse = 0.86*total + 14.86;
	
	ascent(i in 0..length(ItemArray)) {
		if(i==0 && GetPlayerPower<GetPowerBaseline) { CreateItems01(ItemArray[i],11,x,y,disperse); }
		else if(i<=2) { CreateItems01(ItemArray[i],i+1,x,y,disperse); }
		else if(Obj_GetValueD(objEnemy,"PIV Enable",false) && ItemArray2[1]==1) { CreateItems01(ItemArray[i],i+4,x-20,y,0); }
		else { CreateItems01(ItemArray[i],i+4,x,y,0); }
	}
	if(Obj_GetValueD(objEnemy,"PIV Enable",false)){
		ascent(i in 0..length(ItemArray2)) {
			if(i==0) { CreateItems01(ItemArray2[i],12,x,y,disperse); }
			else if(ItemArray[3]<=0 && ItemArray[4]<=0) { CreateItems01(ItemArray2[i],7,x,y,0); }
			else { CreateItems01(ItemArray2[i],7,x+20,y,0); }
		}
	}
}

function GenerateEnemyItems02(ID,objEnemy,x,y) {
	let ItemArray = EnemyItemList[ID];
	let ItemArray2 = EnemyFlashItemList[ID];
	
	let total = 0;
	if(Obj_GetValueD(objEnemy,"PIV Enable",false)) {
		total = ItemArray[0]+ItemArray[1]+ItemArray[2]+ItemArray2[0];
	}
	else {
		total = ItemArray[0]+ItemArray[1]+ItemArray[2];
	}
	let disperse = 0.86*total + 14.86;
	
	ascent(i in 0..length(ItemArray)) {
		if(i==0 && GetPlayerPower<GetPowerBaseline) { CreateItems02(objEnemy,ItemArray[i],11,x,y,disperse); }
		else if(i<=2) { CreateItems02(objEnemy,ItemArray[i],i+1,x,y,disperse); }
		else if(Obj_GetValueD(objEnemy,"PIV Enable",false) && ItemArray2[1]==1) { CreateItems02(objEnemy,ItemArray[i],i+4,x-20,y,0); }
		else { CreateItems02(objEnemy,ItemArray[i],i+4,x,y,0); }
	}
	if(Obj_GetValueD(objEnemy,"PIV Enable",false)){
		ascent(i in 0..length(ItemArray2)) {
			if(i==0) { CreateItems02(objEnemy,ItemArray2[i],12,x,y,disperse); }
			else if(ItemArray[3]<=0 && ItemArray[4]<=0) { CreateItems02(objEnemy,ItemArray2[i],7,x+20,y,0); }
			else { CreateItems02(objEnemy,ItemArray2[i],7,x,y,0); }
		}
	}
}

				  //POW,POI,B
let SpellItemList =[[0,0,0],	//Placeholder for unused Spell ID #000
					[14, 10, 18], 
					[14, 10, 18], 
					[14, 14, 18], 
					[0, 20, 20], 
					[16, 12, 20], 
					[16, 12, 20], 
					[16, 12, 20], 
					[16, 16, 20], 
					[0, 25, 25], 
					[18, 14, 22], 
					[18, 14, 22], 
					[18, 14, 22], 
					[18, 18, 22], 
					[0, 30, 30], 
					[20, 16, 24], 
					[20, 16, 24], 
					[20, 16, 24], 
					[20, 16, 24], 
					[20, 16, 24], 
					[20, 20, 24], 
					[0, 35, 35],
					[22, 18, 26], 
					[22, 18, 26], 
					[22, 18, 26], 
					[22, 18, 26], 
					[22, 18, 26], 
					[22, 22, 26], 
					[0, 40, 40],
					[24, 20, 28], 
					[24, 20, 28], 
					[24, 20, 28], 
					[24, 20, 28],
					[24, 20, 28],
					[0, 0, 0],
					[0, 0, 0],
					[30, 20, 15], //Stage EX
					[30, 20, 15],
					[30, 20, 15],
					[8, 30, 30],
					[8, 30, 30],
					[8, 30, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[8, 25, 30],
					[0, 0, 0],
					[0, 0, 0],
					[0, 0, 0],
					[0, 0, 0],
					[0, 0, 0],
					[0, 0, 0],
					[0, 0, 0]];

function GenerateSpellItems01(objEnemy,x,y) {
	let ID = ceil(Obj_GetValueD(objEnemy,"Spell ID",000)/4);
	if(GetCommonData("Stage","") == "Stage 7") { ID = 35+ceil((Obj_GetValueD(objEnemy,"Spell ID",000)-140)/2); }
	let ItemArray = SpellItemList[ID];
	
	let total = ItemArray[0]+ItemArray[1]+ItemArray[2];
	
	if(GetPlayerPower<GetPowerBaseline-2) { total+=24; }
	else if(GetPlayerPower<GetPowerBaseline-1) { total+=16; }
	else if(GetPlayerPower<GetPowerBaseline) { total+=8; }
	
	//let disperse = 0.86*total + 14.86;
	let disperse = 0.80*total + 14.86; //adjusted
	
	if(GetAreaCommonData("PlayState","Mode","")!="Spell Practice") {
		ascent(i in 0..length(ItemArray)) {
			CreateItems01(ItemArray[i],i+1,x,y,disperse);
		}
		if(GetPlayerPower<GetPowerBaseline-2) { CreateItems01(24,11,x,y,disperse); }
		else if(GetPlayerPower<GetPowerBaseline-1) { CreateItems01(16,11,x,y,disperse); }
		else if(GetPlayerPower<GetPowerBaseline) { CreateItems01(8,11,x,y,disperse); }
	}
}
function GenerateSpellItems02(objEnemy,x,y) {
	let ID = ceil(Obj_GetValueD(objEnemy,"Spell ID",000)/4);
	if(GetCommonData("Stage","") == "Stage 7") { ID = 35+ceil((Obj_GetValueD(objEnemy,"Spell ID",000)-140)/2); }
	let ItemArray = SpellItemList[ID];
	
	let total = ItemArray[0]+ItemArray[1]+ItemArray[2];
	
	if(GetPlayerPower<GetPowerBaseline-2) { total+=24; }
	else if(GetPlayerPower<GetPowerBaseline-1) { total+=16; }
	else if(GetPlayerPower<GetPowerBaseline) { total+=8; }
	
	//let disperse = 0.86*total + 14.86;
	let disperse = 0.80*total + 14.86; //adjusted
	
	if(GetAreaCommonData("PlayState","Mode","")!="Spell Practice") {
		ascent(i in 0..length(ItemArray)) {
			CreateItems02(objEnemy,ItemArray[i],i+1,x,y,disperse);
		}
		if(GetPlayerPower<GetPowerBaseline-2) { CreateItems02(objEnemy,24,11,x,y,disperse); }
		else if(GetPlayerPower<GetPowerBaseline-1) { CreateItems02(objEnemy,16,11,x,y,disperse); }
		else if(GetPlayerPower<GetPowerBaseline) { CreateItems02(objEnemy,8,11,x,y,disperse); }
	}
}

/*
4->(8+4) ->(12+8+4) ->(16+12+8+4) ->(20+16+12+8+4) ->(24+20+16+12+8+4)-> (28+24+20+16+12+8+4) 	--	 # of items
8->(8+16)->(8+16+16)->(8+16+16+16)->(8+16+16+16+16)->(8+16+16+16+16+16)->(8+16+16+16+16+16+16)	--	 radius needed

4,8
12,24
24,40
40,56
60,72
84,88
112,104

y = 0.86x + 14.86 (Best Fit)
*/