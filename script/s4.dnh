#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Spell04"]
#Text[""]
#Background["./Background.dnh"]
#System["system/System.dnh"]
#Player["script/player/Thief Team/Thief Team.dnh"]

#include"script/lib/Function_Misc.dnh"
#include"script/lib/Function_Audio.dnh"
#include"script/lib/Function_Rand.dnh"
#include"script/lib/Function_Effect.dnh"
#include"script/lib/Function_Enemy.dnh"
#include"script/lib/Function_Shot.dnh"
#include"script/lib/BossAnimation.dnh"
#include"shot/DarkShot_Const.dnh"

let CSD = GetCurrentScriptDirectory;
let MD = GetModuleDirectory;

let objEnemyMain;
let objScene;
let GetCenterX = GetStgFrameWidth/2;
let GetCenterY = GetStgFrameHeight/2;
let GetLife = 0;
let GetTimer = 0;
let GetX = 0;
let GetY = 0;

let gl_rot = 1;

@Loading {
}

@Event {
	alternative(GetEventType)
	case(EV_REQUEST_LIFE){ SetScriptResult(2000); }
	case(EV_REQUEST_TIMER){	SetScriptResult(60); }
}
@Initialize {
	objEnemyMain = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	objScene = GetEnemyBossSceneObjectID;
	ObjEnemy_Regist(objEnemyMain);

	Obj_SetValue(objEnemyMain,"Boss Name","Porygon-Z");
	Obj_SetValue(objEnemyMain,"Aura Color",[1,10,2]);
	Obj_SetValue(objEnemyMain,"Circle Color","Pink");
	Obj_SetValue(objEnemyMain,"Spell ID",04);
	Obj_SetValue(objScene,"Spell Base",1);
	Obj_SetValue(objEnemyMain,"Cut Image",[MD ~ "img/enemy/PoryCut.png"]);
	//SetAutoDeleteObject(true);
	PlayEnemyHitSound(objEnemyMain, 1);
	Obj_SetValue(objEnemyMain,"Animation","PORYGON");

	SpellDeclare(objEnemyMain,120);

	SetInvincibilityDamageRate(objEnemyMain, 240, 50, 20);
	ObjMove_SetDestAtWeight(objEnemyMain, GetCenterX, GetCenterY, 10, 5);

	mainTask;
	End;

}

@MainLoop {
	GetX = ObjMove_GetX(objEnemyMain);
	GetY = ObjMove_GetY(objEnemyMain);
	GetLife = ObjEnemy_GetInfo(objEnemyMain,INFO_LIFE);
	GetTimer = ObjEnemyBossScene_GetInfo(objScene,INFO_TIMER);

	ObjEnemy_SetIntersectionCircleToShot(objEnemyMain, GetX, GetY, 18);
	/* ObjEnemy_SetIntersectionCircleToPlayer(objEnemyMain, GetX, GetY, 16); */

	yield;
}

task mainTask {
	wait(120);
	loop {
		PlaySoundEffect("charge",100);
		ConcentrationBinaryA2(objEnemyMain,90,7,160,[255,64,255]);
		wait(120);
		let dir = rand(0,360);
		gl_rot = gl_rot*-1;
		PlaySoundEffect("effect2",100);
		loop(3) {
			LaserTree(GetX,GetY,dir,160,120);
			dir+=360/3;
		}
		wait(210);
		PlaySoundEffect("charge",100);
		ConcentrationBinaryA2(objEnemyMain,90,7,160,[255,64,255]);
		wait(120);
		PlaySoundEffect("effect2",100);
		loop(4) {
			LaserTree(GetX,GetY,dir,120,90);
			dir+=360/4;
		}
		wait(210);
		PlaySoundEffect("charge",100);
		ConcentrationBinaryA2(objEnemyMain,90,7,160,[255,64,255]);
		wait(120);
		PlaySoundEffect("effect2",100);
		loop(6) {
			LaserTree(GetX,GetY,dir,120,60);
			dir+=360/6;
		}
		wait(310);
	}
}

task LaserTree(x,y,dir,maxlen,deltadir) {
	LaserSegment(x,y,dir,maxlen,LASER_CYAN);
	wait(25);
	x = x+maxlen*cos(dir);
	y = y+maxlen*sin(dir);
	let dir1 = dir+deltadir;
	let dir2 = dir-deltadir;
	LaserSegment(x,y,dir1,maxlen,LASER_CYAN);
	LaserSegment(x,y,dir2,maxlen,LASER_CYAN);
	wait(25);

	let x1 = x+maxlen*cos(dir1);
	let y1 = y+maxlen*sin(dir1);
	let x2 = x+maxlen*cos(dir2);
	let y2 = y+maxlen*sin(dir2);
	LaserSegment(x1,y1,dir1+deltadir,maxlen,LASER_MAGENTA);
	LaserSegment(x1,y1,dir1-deltadir,maxlen,LASER_MAGENTA);
	LaserSegment(x2,y2,dir2+deltadir,maxlen,LASER_MAGENTA);
	LaserSegment(x2,y2,dir2-deltadir,maxlen,LASER_MAGENTA);
}

task LaserSegment(x,y,dir,maxlen,graphic) {
	let obj = CreateStraightLaser01(x,y,dir,0,25,210,graphic,90);
	let len = 0;
	loop(75) {
		len+=maxlen/75;
		ObjLaser_SetLength(obj,len);
		yield;
	}
	wait(15);
	PlaySoundEffect("laser",100);
	wait(30);
	PlaySoundEffect("laser5",100);
	let num = 3;
	let seglen = maxlen/2;
	ascent(i in 0..num) {
		CreateShot02(x+seglen/num*i*cos(dir),y+seglen/num*i*sin(dir),0,dir+90*gl_rot,3/210,3,DIAMOND_LARGE_MAGENTA,40);
	}
	ascent(i in num..num*2) {
		CreateShot02(x+seglen/num*i*cos(dir),y+seglen/num*i*sin(dir),0,dir-90*gl_rot,3/210,3,DIAMOND_LARGE_CYAN,40);
	}
	/* ascent(i in num*2..num*3) {
		CreateShot02(x+seglen/num*i*cos(dir),y+seglen/num*i*sin(dir),0,dir+90,3/135,3,DIAMOND_LARGE_MAGENTA,40);
	} */
}


task DiamondShot01(num,x,y,r,d,speed,dir) { //num and d must be a whole number
	ascent(i in 0..num+1) {
		CreateShot01(x+r*i*cos(dir+90),y+r*i*sin(dir+90),speed,dir,DIAMOND_CYAN,i*d);
	}
	ascent(i in 0..num+1) {
		CreateShot01(x+r*i*cos(dir-90),y+r*i*sin(dir-90),speed,dir,DIAMOND_CYAN,i*d);
	}
	wait((num-1)*d);
	descent(i in 0..num) {
		CreateShot01(x+r*i*cos(dir+90),y+r*i*sin(dir+90),speed,dir,DIAMOND_CYAN,((num+1)*d)-i*d);
	}
	descent(i in 0..num) {
		CreateShot01(x+r*i*cos(dir-90),y+r*i*sin(dir-90),speed,dir,DIAMOND_CYAN,((num+1)*d)-i*d);
	}
}

task End {
	while(ObjEnemy_GetInfo(objEnemyMain, INFO_LIFE) > 0) { yield; }
	DeleteShotWave(1,GetX,GetY,30);
	if(GetPlayerInvincibilityFrame<=15) { SetPlayerInvincibilityFrame(15); }
	PlaySoundEffect("shot",100);
	ExplosionB3_Binary(objEnemyMain,"MAPLE",[255,96,200],[255,96,200]);
	CloseScript(GetOwnScriptID);
}
