#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Spell03"]
#Text[""]
#Background["./Background.dnh"]
#System["system/System.dnh"]
#Player["script/player/Thief Team/Thief Team.dnh"]

#include"script/lib/Function_Misc.dnh"
#include"script/lib/Function_Audio.dnh"
#include"script/lib/Function_Rand.dnh"
#include"script/lib/Function_Effect.dnh"
#include"script/lib/Function_Enemy.dnh"
#include"script/lib/Function_Shot.dnh"
#include"script/lib/BossAnimation.dnh"
#include"shot/DarkShot_Const.dnh"

let CSD = GetCurrentScriptDirectory;
let MD = GetModuleDirectory;

let objEnemyMain;
let objScene;
let GetCenterX = GetStgFrameWidth/2;
let GetCenterY = GetStgFrameHeight/2;
let GetLife = 0;
let GetTimer = 0;
let GetX = 0;
let GetY = 0;

let gl_speed = 0.7;
let gl_active = -1;
let gl_scale = 0.22;
let gl_size = 512*gl_scale;
let gl_wait = 200;
let gl_startup_max = 25;
let gl_warn = -1;
let gl_earlyoff = -1;

@Loading {
}

@Event {
	alternative(GetEventType)
	case(EV_REQUEST_LIFE){ SetScriptResult(1300); }
	case(EV_REQUEST_TIMER){	SetScriptResult(50); }
}
@Initialize {
	objEnemyMain = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	objScene = GetEnemyBossSceneObjectID;
	ObjEnemy_Regist(objEnemyMain);

	Obj_SetValue(objEnemyMain,"Boss Name","Porygon-Z");
	Obj_SetValue(objEnemyMain,"Aura Color",[1,10,2]);
	Obj_SetValue(objEnemyMain,"Circle Color","Pink");
	Obj_SetValue(objEnemyMain,"Spell ID",03);
	Obj_SetValue(objScene,"Spell Base",1);
	Obj_SetValue(objEnemyMain,"Cut Image",[MD ~ "IMG/Enemy/PoryCut.png"]);
	//SetAutoDeleteObject(true);
	PlayEnemyHitSound(objEnemyMain, 1);
	Obj_SetValue(objEnemyMain,"Animation","PORYGON");

	SpellDeclare(objEnemyMain,120);

	SetInvincibilityDamageRate(objEnemyMain, 240, 50, 25);
	ObjMove_SetDestAtWeight(objEnemyMain, GetCenterX, GetCenterY-130, 10, 5);

	SetCommonData("EndBossBG",true);

	mainTask;
	End;

}

@MainLoop {
	GetX = ObjMove_GetX(objEnemyMain);
	GetY = ObjMove_GetY(objEnemyMain);
	GetLife = ObjEnemy_GetInfo(objEnemyMain,INFO_LIFE);
	GetTimer = ObjEnemyBossScene_GetInfo(objScene,INFO_TIMER);

	ObjEnemy_SetIntersectionCircleToShot(objEnemyMain, GetX, GetY, 18);
	ObjEnemy_SetIntersectionCircleToPlayer(objEnemyMain, GetX, GetY, 16);

	yield;
}

task mainTask {
	let c = 0;
	wait(20);
	Fire1;
	Switch;
	loop {
		c = 0;
		Block(0,GetCenterX-gl_size*2,-gl_size/2,1);
		Block(1,GetCenterX-gl_size*1,GetStgFrameHeight+gl_size/2,-1);
		Block(0,GetCenterX,-gl_size/2,1);
		Block(1,GetCenterX+gl_size*1,GetStgFrameHeight+gl_size/2,-1);
		Block(0,GetCenterX+gl_size*2,-gl_size/2,1);
		loop {
			c+=gl_speed;
			if(c>gl_size) { break; }
			yield;
		}
		c = 0;
		Block(1,GetCenterX-gl_size*2,-gl_size/2,1);
		Block(0,GetCenterX-gl_size*1,GetStgFrameHeight+gl_size/2,-1);
		Block(1,GetCenterX,-gl_size/2,1);
		Block(0,GetCenterX+gl_size*1,GetStgFrameHeight+gl_size/2,-1);
		Block(1,GetCenterX+gl_size*2,-gl_size/2,1);
		loop {
			c+=gl_speed;
			if(c>gl_size) { break; }
			yield;
		}
	}
}

task Fire1 {
	wait(240);
	let dir = rand(0,360);
	loop {
		PlaySoundEffect("charge2",100);
		ConcentrationBinaryA1(objEnemyMain,30,7,160,[255,255,64]);
		wait(60);
		loop(2) {
			loop(7) {
				PlaySoundEffect("shot",85);
				DiamondShot01(7,GetX,GetY,2,1,4.5,dir);
				CreateShot01(GetX,GetY,4.5,dir,DIAMOND_LARGE_MAGENTA,7);
				DiamondShot01(7,GetX,GetY,2,1,4.5,dir+120);
				CreateShot01(GetX,GetY,4.5,dir+120,DIAMOND_LARGE_MAGENTA,7);
				DiamondShot01(7,GetX,GetY,2,1,4.5,dir+240);
				CreateShot01(GetX,GetY,4.5,dir+240,DIAMOND_LARGE_MAGENTA,7);
				wait(2);
				dir+=360/7;
			}
			dir+=360/14+3;
		}
		TeleportBossRandom(objEnemyMain,80,20,GetCenterX-120,GetCenterX+120,GetCenterY-150,GetCenterY-70,60);
		wait(180);
	}
}

task Switch {
	let c = -1;
	loop {
		c++;
		wait(gl_wait-90);
		gl_warn = c%2;
		Warning;
		wait(90-gl_startup_max);
		gl_earlyoff = (c+1)%2;
		wait(gl_startup_max);
		gl_active = c%2;
		if(gl_wait>100) { gl_wait-=5; }
		if(gl_speed<1.5) { gl_speed+=0.12; }
	}
}

task Warning {
	let w = 30;
	loop(3) {
		PlaySoundEffect("chime",100);
		wait(w);
	}
	PlaySoundEffect("chime2",100);
}

task Block(type,x,y,dir) {
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);

	let typeArray = ["zero","one"];

	ObjRender_SetBlendType(obj, BLEND_ALPHA);
	Obj_SetRenderPriorityI(obj,29);
	ObjPrim_SetTexture(obj,MD ~ "img/enemy/"~typeArray[type]~"_block.png");
	ObjSprite2D_SetSourceRect(obj, 0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(obj);

	let scale = gl_scale;
	let alpha = 0;
	let a_min = 70;
	let a_max = 200;
	let a_diff = a_max-a_min;
	let scaleMod = 1;
	let alphaMod = 1;
	let warnStart = false;
	if(gl_active==type) { alpha = 200; } else { alpha = 70; }
	ObjRender_SetPosition(obj,x,y,0);

	Hitbox;

	while(!Obj_IsDeleted(objEnemyMain)) {
		/* if(gl_warn==type && !warnStart) {
			Overlay;
			warnStart = true;
		}
		if(gl_warn!=type) { warnStart = false; } */
		/* if(scaleMod>1) {
			scaleMod-=1/30;
			alphaMod-=2/30;
		} */
		/* else {
			scaleMod = 1;
			alphaMod = 1;
		} */
		if(gl_active==type) {
			if(alpha<200) { alpha+=a_diff/gl_startup_max; }
		}
		else {
			if(alpha>70) { alpha-=a_diff/gl_startup_max; }
		}

		y+=gl_speed*dir;
		ObjRender_SetScaleXYZ(obj,scale*scaleMod,scale*scaleMod,scale*scaleMod);
		ObjRender_SetY(obj,y);
		ObjRender_SetAlpha(obj,alpha*alphaMod);
		yield;
	}
	Obj_Delete(obj);

	task Hitbox {
		let length = 512*scale*1.05;
		let width = 512*scale*1.03;
		let startup = 0;
		let startup_max = gl_startup_max;
		let objhitbox = CreateStraightLaserA1(GetCenterX,GetCenterY,90,length,width,10000,LASER_GRAY,0);
		ObjLaser_SetIntersectionWidth(objhitbox,width);
		Obj_SetVisible(objhitbox,false);
		while(!Obj_IsDeleted(obj)) {
			ObjMove_SetPosition(objhitbox,ObjRender_GetX(obj),ObjRender_GetY(obj)-512/2*scale);
			if(gl_active==type) { startup++; } else { startup = 0; }
			if(gl_active==type && startup>=startup_max && gl_earlyoff!=type) {
				ObjShot_SetIntersectionEnable(objhitbox,true);
			}
			else {
				ObjShot_SetIntersectionEnable(objhitbox,false);
			}
			yield;
		}
		Obj_Delete(objhitbox);
	}
}

task DiamondShot01(num,x,y,r,d,speed,dir) { //num and d must be a whole number
	ascent(i in 0..num+1) {
		CreateShot01(x+r*i*cos(dir+90),y+r*i*sin(dir+90),speed,dir,DIAMOND_CYAN,i*d);
	}
	ascent(i in 0..num+1) {
		CreateShot01(x+r*i*cos(dir-90),y+r*i*sin(dir-90),speed,dir,DIAMOND_CYAN,i*d);
	}
	wait((num-1)*d);
	descent(i in 0..num) {
		CreateShot01(x+r*i*cos(dir+90),y+r*i*sin(dir+90),speed,dir,DIAMOND_CYAN,((num+1)*d)-i*d);
	}
	descent(i in 0..num) {
		CreateShot01(x+r*i*cos(dir-90),y+r*i*sin(dir-90),speed,dir,DIAMOND_CYAN,((num+1)*d)-i*d);
	}
}

task End {
	while(ObjEnemy_GetInfo(objEnemyMain, INFO_LIFE) > 0) { yield; }
	DeleteShotAll(TYPE_ALL,TYPE_ITEM);
	if(GetPlayerInvincibilityFrame<=15) { SetPlayerInvincibilityFrame(15); }
	PlaySoundEffect("bonus",100);
	CreateItems01(1,7,GetX,GetY,0);
	PlaySoundEffect("shot",100);
	Obj_Delete(objEnemyMain);
	yield;
	CloseScript(GetOwnScriptID);
}
